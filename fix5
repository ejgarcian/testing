// (Only the updateActualProcess method is shown here — paste into your Interface1 class replacing the existing method.)
    private void updateActualProcess() {
        if (show_actual == null) return; // defensive

        String txt = "";
        try {
            if (operativeSystem != null && operativeSystem.getProcessList().count() > 0) {
                Proceso active = operativeSystem.getDispatcher().getActiveProcess(operativeSystem.getProcessList());
                if (active != null && active.getPcb() != null) {
                    PCB pcb = active.getPcb();
                    String name = pcb.getName();
                    txt = name == null ? "" : name;
                } else {
                    // No active process currently
                    txt = "";
                }
            }
        } catch (Exception ex) {
            // avoid exceptions killing the EDT — show blank and log the problem
            System.err.println("updateActualProcess error: " + ex);
            txt = "";
        }
        show_actual.setText(txt);
        show_actual.revalidate();
        show_actual.repaint();
    }


public class Dispatcher {

    public Dispatcher() {
    }

    public void activate(PCB pcb, Lista procesos) {
        int i = 0;
        Proceso procesoAux = null;
        while (i < procesos.count()){
            procesoAux = (Proceso)procesos.get(i);
            if (pcb.getId() == ((Proceso)procesos.get(i)).getPcb().getId()){
                procesoAux = (Proceso)procesos.get(i);
                break;
            } else {
                i++;
            } 
        }

        // set running status
        if (procesoAux != null && procesoAux.getPcb() != null) {
            procesoAux.getPcb().setStatus("running");
            System.out.println("status setteado: " + procesoAux.getPcb().getStatus());
            System.out.println("id del proceso setteado: " + procesoAux.getPcb().getId());

            if (procesoAux.getTotalTimeSpent() > 0){
                synchronized (procesoAux) {
                    // Notifica al hilo que estaba en wait() para que salga del bloqueo
                    procesoAux.notify(); 
                }
            } else {
                // starting the thread for the first time
                procesoAux.start();
            }
        }
    }

    public Proceso deactivate(Proceso activeProcess) {
        if (activeProcess != null && activeProcess.getPcb() != null) {
            activeProcess.getPcb().setStatus("ready");
            activeProcess.interrupt();
        }
        return activeProcess;
    }

    public Proceso getActiveProcess(Lista procesos){
        if (procesos == null) return null;
        int n = procesos.count();
        for (int i = 0; i < n; i++) {
            Object o = procesos.get(i);
            if (!(o instanceof Proceso)) continue;
            Proceso p = (Proceso) o;
            PCB pcb = p.getPcb();
            if (pcb == null) continue;
            // use .equals to compare string content (safer than ==)
            if ("running".equals(pcb.getStatus())) {
                return p;
            }
        }
        return null;
    }
}
